[{"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Chat/Chat.js":"1","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Chat/Message.js":"2","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Chat/ChatBody.js":"3","/home/adarsh/MERN Projects/Social Media Project/frontend/src/App.js":"4","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/NavigationBar.js":"5","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Loader/Loader.js":"6","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Settings/Settings.js":"7","/home/adarsh/MERN Projects/Social Media Project/frontend/src/utils/setAuthToken.js":"8","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/ShowPost.js":"9","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/alert.js":"10","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Find/Person.js":"11","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/Post.js":"12","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/post.js":"13","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/EditPost.js":"14","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Search.js":"15","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Auth.js":"16","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/Comment.js":"17","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/chat.js":"18","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/Profile.js":"19","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/Home.js":"20","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/auth.js":"21","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Auth/AuthForm.js":"22","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/search.js":"23","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Connection/Person.js":"24","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/Post.js":"25","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Connection.js":"26","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Post.js":"27","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/EditPost.js":"28","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Chat.js":"29","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reportWebVitals.js":"30","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Find/Find.js":"31","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Auth/Auth.js":"32","/home/adarsh/MERN Projects/Social Media Project/frontend/src/utils/msToTime.js":"33","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/update.js":"34","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Loader.js":"35","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/Comment.js":"36","/home/adarsh/MERN Projects/Social Media Project/frontend/src/store.js":"37","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/connection.js":"38","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/AddPost.js":"39","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Alert.js":"40","/home/adarsh/MERN Projects/Social Media Project/frontend/src/index.js":"41","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Connection/Connection.js":"42","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/index.js":"43","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/EditPost.js":"44","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Landing/Landing.js":"45","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/loader.js":"46","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Alert/Alert.js":"47","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Person.js":"48","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/About/About.js":"49"},{"size":3057,"mtime":1612629089533,"results":"50","hashOfConfig":"51"},{"size":1558,"mtime":1612700008666,"results":"52","hashOfConfig":"51"},{"size":3905,"mtime":1612699603248,"results":"53","hashOfConfig":"51"},{"size":1987,"mtime":1612700442972,"results":"54","hashOfConfig":"51"},{"size":2575,"mtime":1612700398664,"results":"55","hashOfConfig":"51"},{"size":630,"mtime":1612375127631,"results":"56","hashOfConfig":"51"},{"size":6810,"mtime":1612699815062,"results":"57","hashOfConfig":"51"},{"size":255,"mtime":1612375127783,"results":"58","hashOfConfig":"51"},{"size":1011,"mtime":1612375127603,"results":"59","hashOfConfig":"51"},{"size":322,"mtime":1612375127391,"results":"60","hashOfConfig":"51"},{"size":1345,"mtime":1612375127603,"results":"61","hashOfConfig":"51"},{"size":5548,"mtime":1612517643775,"results":"62","hashOfConfig":"51"},{"size":6844,"mtime":1612698500250,"results":"63","hashOfConfig":"51"},{"size":300,"mtime":1612459676137,"results":"64","hashOfConfig":"51"},{"size":240,"mtime":1612375127707,"results":"65","hashOfConfig":"51"},{"size":1129,"mtime":1612375127667,"results":"66","hashOfConfig":"51"},{"size":3283,"mtime":1612517613726,"results":"67","hashOfConfig":"51"},{"size":1953,"mtime":1612636537416,"results":"68","hashOfConfig":"51"},{"size":4015,"mtime":1612610174600,"results":"69","hashOfConfig":"51"},{"size":701,"mtime":1612375127603,"results":"70","hashOfConfig":"51"},{"size":3346,"mtime":1612375127399,"results":"71","hashOfConfig":"51"},{"size":2420,"mtime":1612375127599,"results":"72","hashOfConfig":"51"},{"size":972,"mtime":1612375127483,"results":"73","hashOfConfig":"51"},{"size":1345,"mtime":1612387925679,"results":"74","hashOfConfig":"51"},{"size":5341,"mtime":1612517594591,"results":"75","hashOfConfig":"51"},{"size":246,"mtime":1612428275011,"results":"76","hashOfConfig":"51"},{"size":365,"mtime":1612375127703,"results":"77","hashOfConfig":"51"},{"size":2931,"mtime":1612462043592,"results":"78","hashOfConfig":"51"},{"size":513,"mtime":1612633625370,"results":"79","hashOfConfig":"51"},{"size":362,"mtime":1612375127735,"results":"80","hashOfConfig":"51"},{"size":2576,"mtime":1612700129832,"results":"81","hashOfConfig":"51"},{"size":1870,"mtime":1612375127599,"results":"82","hashOfConfig":"51"},{"size":833,"mtime":1612476478304,"results":"83","hashOfConfig":"51"},{"size":2256,"mtime":1612698118758,"results":"84","hashOfConfig":"51"},{"size":413,"mtime":1612375127687,"results":"85","hashOfConfig":"51"},{"size":3135,"mtime":1612517628418,"results":"86","hashOfConfig":"51"},{"size":621,"mtime":1612375127759,"results":"87","hashOfConfig":"51"},{"size":784,"mtime":1612428927705,"results":"88","hashOfConfig":"51"},{"size":2828,"mtime":1612694258546,"results":"89","hashOfConfig":"51"},{"size":382,"mtime":1612375127667,"results":"90","hashOfConfig":"51"},{"size":547,"mtime":1612375127647,"results":"91","hashOfConfig":"51"},{"size":2064,"mtime":1612431110679,"results":"92","hashOfConfig":"51"},{"size":512,"mtime":1612552267915,"results":"93","hashOfConfig":"51"},{"size":2938,"mtime":1612462036811,"results":"94","hashOfConfig":"51"},{"size":974,"mtime":1612375127631,"results":"95","hashOfConfig":"51"},{"size":214,"mtime":1612375127451,"results":"96","hashOfConfig":"51"},{"size":655,"mtime":1612375127543,"results":"97","hashOfConfig":"51"},{"size":530,"mtime":1612379593136,"results":"98","hashOfConfig":"51"},{"size":2425,"mtime":1612705421303,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"yfdvfn",{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"125"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"142"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"103"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"125"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"103"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"125"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"103"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"103"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"125"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Chat/Chat.js",["221","222"],"import React,{useState,useEffect} from 'react';\nimport {ListGroup,Card,Image,Button,Accordion} from 'react-bootstrap'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {getChatConnections} from '../../actions/chat'\nimport userImg from '../../utils/user.png'\n\nimport ChatBody from './ChatBody'\n\nconst Chat = ({isAuthenticated,getChatConnections,connections,user}) => {\n    const [name,setName] = useState('');\n    const [room,setRoom] = useState(null);\n    /* console.log(connections); */\n    useEffect(() => {\n        getChatConnections();\n        return () => {\n            setName('');\n            setRoom(null);\n        }\n    }, [])\n    /* console.log(connections); */\n    if(!isAuthenticated){\n        return <Redirect to='/' />\n      }\n    return (\n            <div style={{marginTop:'5%'}} className=\"container\">\n                <div className=\"row \">\n                    <div className=\"col col-lg-5\">\n                    <ListGroup>\n                        <Accordion defaultActiveKey=\"0\">\n                        <Accordion.Toggle className=\"btn-outline-primary mb-2\" as={Card.Header} eventKey=\"0\" style={{cursor:'pointer'}}>\n                        Chat Connections\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <div className=\"mb-3\">\n                        {\n                            connections ?\n                            connections.map((connection,index) => {\n                                return (\n                                <ListGroup.Item  onClick={() => {\n                                    setName(connection.connectionid.name);\n                                    setRoom(connection.connectionroom);\n                                }} style={{cursor:'pointer'}} className=\"btn-outline-success\">\n                                    <Image style={{width:'50px'}} src={connection.connectionid.avatar?connection.connectionid.avatar:userImg} />&nbsp;&nbsp;&nbsp;\n                                    <b style={{textTransform:'capitalize'}}>{connection.connectionid.name}</b>\n                                </ListGroup.Item>\n                                )})\n                                :null\n                        }\n                        </div>\n                        </Accordion.Collapse>\n                        </Accordion>\n                    </ListGroup>\n                    </div>\n                    <div className=\"col d-flex justify-content-center\">\n                        {\n                            (name !== '' && room !== null)?\n                            <ChatBody name={name} room={room} />\n                            :null\n                        }\n                    </div>\n                </div> \n            </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      isAuthenticated:state.auth.isAuthenticated,\n      connections:state.chat.connection,\n      user : state.auth.user\n    }\n  }\n\nexport default connect(mapStateToProps,{getChatConnections})(Chat);",["223","224"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Chat/Message.js",["225","226"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Chat/ChatBody.js",["227","228","229","230","231"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/App.js",["232","233"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/NavigationBar.js",["234","235"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Loader/Loader.js",["236"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Settings/Settings.js",["237"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/utils/setAuthToken.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/ShowPost.js",["238","239","240","241","242","243","244","245"],"import React,{useEffect,useState} from 'react';\nimport {Card,InputGroup,Image,FormControl} from 'react-bootstrap'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {FaThumbsUp} from 'react-icons/fa'\nimport userImg from '../../utils/user.png'\nimport Post from './Post'\n\nimport {showPost} from '../../actions/post'\n\nconst ShowPost = ({isAuthenticated,showPost,posts}) => {\n    useEffect(() => {\n        showPost();\n    },[]);\n\n    if(!isAuthenticated){\n        return <Redirect to='/' />\n      }\n    return (\n            <div className=\"container\">\n            { posts && posts.length > 0 ?\n              posts.map((post,index) => {\n                  return (\n                   <Post index={index} post={post} />\n                  )}):null\n            }\n            </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      isAuthenticated:state.auth.isAuthenticated,\n      posts:state.post\n    }\n  }\n\nexport default connect(mapStateToProps,{showPost})(ShowPost);","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/alert.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Find/Person.js",[],["246","247"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/Post.js",["248","249"],"import React,{useState,useEffect} from 'react';\nimport {Card,InputGroup,Image,FormControl,Dropdown,DropdownButton} from 'react-bootstrap'\nimport {Redirect,Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {FaThumbsUp,FaThumbsDown} from 'react-icons/fa'\nimport userImg from '../../utils/user.png'\nimport msToTime from '../../utils/msToTime'\n\nimport {Dislike,Like} from '../../actions/post'\nimport {AddComment,deletePost} from '../../actions/post'\nimport {getProfile} from '../../actions/profile'\nimport Comment from './Comment';\nimport EditPost from './EditPost'\n\n\nconst Post = ({isAuthenticated,user,index,post,Like,Dislike,AddComment,personid,deletePost}) => {\n    const [currTime,setCurrentTime] = useState(Date.now());\n    const [like,setLike] = useState(false);\n    const [dislike,setDislike] = useState(false);\n    const [comment,setComment] = useState('');\n    const [modalShow, setModalShow] = useState(false);\n    useEffect(() => {\n      if(user && post && post.likes && post.likes.find((personid) => personid === user._id)){\n        setLike(true);\n      }\n      else\n      setLike(false);\n\n      if(user && post && post.dislikes && post.dislikes.find((personid) => personid === user._id)){\n        setDislike(true);\n      }\n      else\n      setDislike(false);\n    },[post])\n    useEffect(() => {\n        setInterval(() => setCurrentTime(Date.now()),100000);\n      },[currTime])\n\n    if(!isAuthenticated){\n        return <Redirect to='/' />\n      }\n    return (\n        <Card key={index} className=\"mb-5\" style={{border:'2px solid blue'}}>\n        <Card.Header style={{color:\"white\",fontWeight:'bold',backgroundColor:'navy'}} className=\"\" as=\"h5\">\n        <Link key={index} to={`/profile/${post.userid._id}`} style={{textDecoration:'none'}}>\n        <Image className=\"bg-primary\" rounded style={{width:'35px',height:'35px'}} src={post.userid.avatar?post.userid.avatar:userImg} />&nbsp;&nbsp;\n        <b style={{textTransform:'capitalize',color:'white'}}>{post.userid.name}</b> \n        </Link>\n        <b style={{marginLeft:'1.2rem',fontSize:'1rem',color:'lightgray'}}>\n              ~&nbsp;\n              {\n                 msToTime(currTime - Date.parse(post.date))\n              }\n            </b>\n            { user && (user._id === post.userid._id)?\n                <DropdownButton\n                style={{float:'right'}}\n                    as={InputGroup.Prepend}\n                    variant=\"outline-primary\"\n                    title={<b  style={{color:'white'}}>Post Settings</b>}\n                    id=\"input-group-dropdown-1\"\n                  >\n                    <Dropdown.Item onClick={() => setModalShow(true)} href=\"#\">Edit</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={() => {\n                      deletePost({postid:post._id})\n                      window.location.reload();\n                      }}>Delete</Dropdown.Item>\n                  </DropdownButton>:null\n              }\n          </Card.Header>\n          <EditPost\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            post={post}\n          />\n        <Card.Body className=\"row\">\n         {post.image?\n          <Image className=\"col\" style={{maxHeight:'14rem',maxWidth: '12rem'}} variant=\"top\" src={post.image} />:null\n         }\n          <Card.Text className=\"col\" >\n          {post.text}\n          </Card.Text>\n        </Card.Body>\n        <InputGroup >\n            <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\" \n            style={{backgroundColor:like?\"lightgreen\":'#E9ECEF',cursor:'pointer',pointerEvents:dislike?'none':'auto'}} \n            onClick={() =>  Like({like:!like,postid:post._id,personid})} >\n              <FaThumbsUp  size={like?24:22} style={{color:like?'darkgreen':'yellowgreen'}} />\n              <b >&nbsp;{post.likes.length}&nbsp;&nbsp;{post.likes.length>1?'likes':'like'}</b>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n    \n            <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\" \n            style={{backgroundColor:dislike?\"pink\":'#E9ECEF',cursor:'pointer',pointerEvents:like?'none':'auto'}} \n            onClick={() => Dislike({dislike:!dislike,postid:post._id,personid})} >\n              <FaThumbsDown size={dislike?24:22} style={{color:dislike?'red':'pink'}} />\n              <b>&nbsp;{post.dislikes.length}&nbsp;&nbsp;{post.dislikes.length>1?'dislikes':'dislike'}</b>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n       \n            <FormControl\n            style={{minWidth:'70%'}}\n            placeholder=\"Add a Comment...\"\n            aria-label=\"Username\"\n            aria-describedby=\"basic-addon1\"\n            value={comment}\n            onChange={(event) => setComment(event.target.value)}\n            />\n            <InputGroup.Append>\n            <InputGroup.Text onClick={() => {\n            AddComment({comment,postid:post._id,personid})\n            setComment('')\n          }} style={{color:'white',cursor:'pointer'}} className=\"bg-primary\">Post</InputGroup.Text>\n            </InputGroup.Append>\n        </InputGroup>   \n        <hr style={{marginBottom:'0',marginTop:'0.5rem'}} />\n       <Comment personid={personid} postid={post._id} comments={post.comments} />\n      </Card>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      isAuthenticated:state.auth.isAuthenticated,\n      user:state.auth.user\n    }\n  }\n\nexport default connect(mapStateToProps,{Like,Dislike,AddComment,deletePost})(Post);","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/post.js",["250","251","252","253"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/EditPost.js",["254"],"const initialState = null\n\nexport default (state = initialState,action) => {\n    const {type,payload} = action;\n    switch(type){\n        case 'Edit_Post_Alert':\n            return payload;\n        case 'Edit_Post_Remove_Alert':\n            return null;\n        default:\n        return state;\n    }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Search.js",["255"],"const initialState = null;\n\nexport default (state = initialState,action) => {\n    const {type,payload} = action;\n    switch(type){\n        case 'Search_Success':\n            return payload;\n        default:\n            return state;\n    }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Auth.js",["256"],"const initialState = {\n    token:localStorage.getItem('token'),\n    isAuthenticated : false,\n    user : null\n};\n\nexport default (state = initialState,action) => {\n       const {type,payload} = action;\n       switch(type){\n             case 'Auth_Success':\n                 return {\n                     ...state,\n                     isAuthenticated : true,\n                     user:payload.data\n                 };\n             case 'Register_Success': \n             case 'Login_Success': \n             localStorage.setItem('token',payload.token)\n             return{ ...state,\n                     token : localStorage.getItem('token'),\n                     isAuthenticated : true\n             };\n\n             case 'Register_Fail':\n             case 'Login_Fail':\n             case 'Auth_Fail':\n             case 'Logout':\n                localStorage.removeItem('token')\n                 return{\n                     ...state,\n                     token:null,\n                     isAuthenticated :false,\n                     user : null\n                 };\n            default: \n            return state;\n       }\n       \n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/Comment.js",[],["257","258"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/chat.js",["259","260","261"],"import axios from 'axios'\nimport {setAlert} from './alert'\nimport {setLoader,removeLoader} from './loader'\nimport setAuthToken from '../utils/setAuthToken';\nimport utils from '../utils/utils.json';\nimport {Navigate} from '../utils/Navigate';\n\nexport const getChatConnections = () => async(dispatch) => {\n    dispatch(setLoader());\n    try {\n        const result = await axios.get(`${utils.BACKEND_URL}/chat`);\n     /*    console.log(\"result :\",result.data); */\n        dispatch({type:'Set_Chat_Connections',payload:result.data});\n        dispatch(removeLoader());\n    } catch (error) {\n      if(error.response){\n          const errors = error.response.data.errors;\n          dispatch(removeLoader());\n          if (errors) {\n              errors.forEach((error) => dispatch(setAlert({msg:error.msg,alertType:'danger'})));\n          }\n      }\n    }\n}\n\nexport const saveMessage = ({name,room,text}) => async(dispatch) => {\n    try {\n        const result = await axios.post(`${utils.BACKEND_URL}/chat`,{name,room,text});\n       /*  console.log(\"message saved\",result.data); */\n    } catch (error) {\n        if(error.response){\n            const errors = error.response.data.errors;\n            dispatch(removeLoader());\n            if (errors) {\n                errors.forEach((error) => dispatch(setAlert({msg:error.msg,alertType:'danger'})));\n            }\n        }\n    }\n}\n\n\nexport const getMessage = ({room}) => async(dispatch) => {\n    try {\n        const result = await axios.post(`${utils.BACKEND_URL}/chat/getmessage`,{room});\n      /*   console.log(\"messages :\",result.data.body); */\n        dispatch({type:'Set_Chats',payload:result.data.body});\n    } catch (error) {\n        if(error.response){\n            const errors = error.response.data.errors;\n            dispatch(removeLoader());\n            if (errors) {\n                errors.forEach((error) => dispatch(setAlert({msg:error.msg,alertType:'danger'})));\n            }\n        }\n    }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/Profile.js",["262","263"],"import React,{useState,useEffect} from 'react';\nimport {Card,InputGroup,Alert,Button} from 'react-bootstrap'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport userImg from '../../utils/user.png'\nimport msToTime from '../../utils/msToTime'\n\nimport {getProfile,Follow,Unfollow,removeFollower} from '../../actions/profile'\nimport Post from './Post'\n\nconst Profile = ({isAuthenticated,match,getProfile,profile,user,followinfo,Follow,Unfollow,removeFollower}) => {\n    const [currTime,setCurrentTime] = useState(Date.now());\n    const [isFollower,setIsFollower] = useState(false);\n    const [isFollowed,setIsFollowed] = useState(false);\n\n    const {personid} = match.params;\n    useEffect(() => {\n        getProfile({personid});\n    }, [personid]);\n\n    useEffect(() => {\n       if(followinfo){\n           setIsFollower(followinfo.isfollower);\n           setIsFollowed(followinfo.isfollowed);\n       }\n    },[followinfo])\n\n    if(!isAuthenticated){\n        return <Redirect to='/' />\n        }\n    return (\n            <div>\n                {\n                profile?\n                <Card className=\"mt-4\">\n                    <Alert style={{textAlign:'center',fontSize:'1.3rem',fontWeight:'bold'}} variant=\"primary\">Profile</Alert>\n                    <Card.Body>\n                    <center>\n                        <Card className=\"mb-2 border border-dark d-flex align-items-center\">\n                        <Card.Img className=\"rounded\" style={{marginTop:'1rem',maxHeight:'12rem',maxWidth: '10rem'}} variant=\"top\" src={profile.avatar?profile.avatar:userImg} thumbnail fluid />\n                        <Card.Body className=\"container\">\n                        <Card.Title style={{textTransform:'capitalize'}}>{profile.name}</Card.Title>\n                        <Card.Title>{profile.email}</Card.Title>\n                        <b>( Joined {msToTime(currTime - Date.parse(profile.date))} )</b>\n                        <InputGroup className=\"mb-2 mt-3 row justify-content-center\">\n                        {\n                        !followinfo || profile._id === user._id?null:\n                        <div>\n                            {\n                            isFollowed?\n                            <Button className=\"btn btn-danger\" onClick={() => Unfollow({personid})} style={{marginRight:'1rem'}} /* className=\"col col-lg-2\" */>Unfollow</Button>:\n                            <Button className=\"btn btn-primary\" onClick={() => Follow({personid})} style={{marginRight:'1rem'}} /* className=\"col col-lg-2\" */>Follow</Button>\n                            }\n                            {\n                            isFollower?\n                            <Button onClick={() => removeFollower({personid})} className=\"btn btn-success\" style={{marginLeft:'1rem'}} /* className=\"col col-lg-2\" */>Remove this Follower</Button>\n                            :<Button className=\"btn btn-dark\" style={{marginLeft:'1rem'}} /* className=\"col col-lg-2\" */>Not Follows you</Button>\n                            }\n                        </div>\n                        }\n                        </InputGroup>\n                        </Card.Body>\n                    </Card>\n                    </center>\n                    </Card.Body>\n                    {\n                        profile.posts && isFollowed ?\n                        profile.posts.map((post,index) => {\n                            return (\n                                <Post index={index} personid={personid} post={post} />\n                            )\n                        }):null\n                    }\n                </Card>:null\n                }\n            </div>\n    );\n    }\n\n    const mapStateToProps = (state) => {\n        return{\n        isAuthenticated:state.auth.isAuthenticated,\n        user:state.auth.user,\n        profile:state.person.profile,\n        followinfo:state.person.followinfo\n        }\n    }\n\n    export default connect(mapStateToProps,{getProfile,Follow,Unfollow,removeFollower})(Profile);","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/Home.js",["264","265"],"import React from 'react';\nimport {Jumbotron,Button} from 'react-bootstrap'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport AddPost from './AddPost'\nimport ShowPost from './ShowPost'\n\nconst Home = ({isAuthenticated}) => {\n    if(!isAuthenticated){\n        return <Redirect to='/' />\n      }\n    return (\n            <div>\n              <AddPost/>\n              <hr style={{border:'0.7px solid lightblue',marginTop:'1.5rem',marginBottom:'1.5rem'}} />\n              <ShowPost/>\n            </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      isAuthenticated:state.auth.isAuthenticated\n    }\n  }\n\nexport default connect(mapStateToProps,{})(Home);","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/auth.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Auth/AuthForm.js",["266","267"],"import React,{useState} from 'react';\nimport {Form,Button,InputGroup,FormControl,Card} from 'react-bootstrap'\nimport {BiText} from 'react-icons/bi';\nimport {RiLockPasswordLine,RiEyeLine} from 'react-icons/ri'\n\nconst AuthForm = ({type,onsubmit}) => {\n    const [name,setName] = useState('');\n    const [email,setEmail] = useState(''); \n    const [password,setPassword] = useState(''); \n    const [passwordType,setPasswordType] = useState(1);\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <Form className=\"form\"> \n            {\n                type === 'register'?\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\"><BiText/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control style={{textTransform:'capitalize'}} required=\"true\" type=\"text\" placeholder=\"Enter Name\" value={name} onChange={(event) => setName(event.target.value)} />\n                </InputGroup>:null\n            } \n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                <Form.Control style={{textTransform:'lowercase'}} required=\"true\" type=\"email\" placeholder=\"Enter email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n                </InputGroup>\n\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\"><RiLockPasswordLine/></InputGroup.Text>\n                    </InputGroup.Prepend>\n                <Form.Control required=\"true\" type={passwordType?'password':'text'} placeholder=\"Password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n                <InputGroup.Append>\n                <InputGroup.Text onClick={() => setPasswordType(!passwordType)}><RiEyeLine/></InputGroup.Text>\n                </InputGroup.Append>\n                </InputGroup>\n                \n                <Button onClick={(e) => {\n                    e.preventDefault();\n                    onsubmit(type,name,email,password)\n                }} variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default AuthForm;","/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/search.js",["268"],"import axios from 'axios'\nimport {setAlert} from './alert'\nimport {setLoader,removeLoader} from './loader'\nimport utils from '../utils/utils.json';\nimport {loadUser} from './auth'\n\nexport const Search = ({term}) => async(dispatch) => {\n         /* console.log(term); */\n         dispatch(setLoader());\n          try {\n              const res = await axios.post(`${utils.BACKEND_URL}/search`,{term:term});\n              /* console.log(res); */\n              dispatch(removeLoader());\n              dispatch(setAlert({msg:\"Search Completed\", alertType:'success'}));\n              dispatch({type:'Search_Success',payload:res.data});\n          } catch (error) {\n            dispatch(removeLoader());\n            if(error.response){\n                const errors = error.response.data.errors;\n      \n                if (errors) {\n                    errors.forEach((error) => dispatch(setAlert({msg:error.msg,alertType:'danger'})));\n                }\n            }\n          }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Connection/Person.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/Post.js",["269","270","271"],"import React,{useState,useEffect} from 'react';\nimport {Card,InputGroup,Image,FormControl,Dropdown, DropdownButton,Modal,Button} from 'react-bootstrap'\nimport {Redirect,Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {FaThumbsUp,FaThumbsDown} from 'react-icons/fa'\nimport userImg from '../../utils/user.png'\nimport msToTime from '../../utils/msToTime'\n\nimport {Dislike,Like} from '../../actions/post'\nimport {AddComment,deletePost} from '../../actions/post'\nimport Comment from './Comment';\nimport EditPost from './EditPost'\n\nconst Post = ({isAuthenticated,user,index,post,Like,Dislike,AddComment,deletePost}) => {\n    const [currTime,setCurrentTime] = useState(Date.now());\n    const [like,setLike] = useState(false);\n    const [dislike,setDislike] = useState(false);\n    const [comment,setComment] = useState('');\n    const [modalShow, setModalShow] = useState(false);\n\n    useEffect(() => {\n      if(user && post && post.likes && post.likes.find((id) => id === user._id)){\n        setLike(true);\n      }\n      else\n      setLike(false);\n\n      if(user && post && post.dislikes && post.dislikes.find((id) => id === user._id)){\n        setDislike(true);\n      }\n      else\n      setDislike(false);\n\n    },[post])\n    useEffect(() => {\n        setInterval(() => setCurrentTime(Date.now()),100000);\n      },[currTime])\n\n    if(!isAuthenticated){\n        return <Redirect to='/' />\n      }\n    return (\n        <Card key={index} className=\"mb-5\" style={{border:'2px solid blue'}}>\n        <Card.Header style={{color:\"white\",fontWeight:'bold',backgroundColor:'navy'}} className=\"\" as=\"h5\">\n        <Link key={index} to={`/profile/${post.userid._id}`} style={{textDecoration:'none'}}>\n        <Image className=\"bg-primary\" rounded style={{width:'35px',height:'35px'}} src={post.userid.avatar?post.userid.avatar:userImg} />&nbsp;&nbsp;\n         <b style={{textTransform:'capitalize',color:'white'}}>{post.userid.name}</b> \n         </Link>\n         <b style={{marginLeft:'1.2rem',fontSize:'1rem',color:'lightgray'}}>\n              ~&nbsp;\n              {\n                 msToTime(currTime - Date.parse(post.date))\n              }\n            </b>\n            { user && (user._id === post.userid._id)?\n                <DropdownButton\n                style={{float:'right'}}\n                    as={InputGroup.Prepend}\n                    variant=\"outline-primary\"\n                    title={<b  style={{color:'white'}}>Post Settings</b>}\n                    id=\"input-group-dropdown-1\"\n                  >\n                    <Dropdown.Item onClick={() => setModalShow(true)} href=\"#\">Edit</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={() => deletePost({postid:post._id})}>Delete</Dropdown.Item>\n                  </DropdownButton>:null\n              }\n          </Card.Header>\n          <EditPost\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            post={post}\n          />\n        <Card.Body className=\"row\">\n         {post.image?\n          <Image className=\"col\" style={{maxHeight:'14rem',maxWidth: '12rem'}} variant=\"top\" src={post.image} />:null\n         }\n          <Card.Text className=\"col\" >\n          {post.text}\n          </Card.Text>\n        </Card.Body>\n        <InputGroup >\n            <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\" \n            style={{backgroundColor:like?\"lightgreen\":'#E9ECEF',cursor:'pointer',pointerEvents:dislike?'none':'auto'}} \n            onClick={() =>  Like({like:!like,postid:post._id})} >\n              <FaThumbsUp  size={like?24:22} style={{color:like?'darkgreen':'yellowgreen'}} />\n              <b >&nbsp;{post.likes.length}&nbsp;&nbsp;{post.likes.length>1?'likes':'like'}</b>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n    \n            <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\" \n            style={{backgroundColor:dislike?\"pink\":'#E9ECEF',cursor:'pointer',pointerEvents:like?'none':'auto'}} \n            onClick={() => Dislike({dislike:!dislike,postid:post._id})} >\n              <FaThumbsDown size={dislike?24:22} style={{color:dislike?'red':'pink'}} />\n              <b>&nbsp;{post.dislikes.length}&nbsp;&nbsp;{post.dislikes.length>1?'dislikes':'dislike'}</b>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n       \n            <FormControl\n            style={{minWidth:'70%'}}\n            placeholder=\"Add a Comment...\"\n            aria-label=\"Username\"\n            aria-describedby=\"basic-addon1\"\n            value={comment}\n            onChange={(event) => setComment(event.target.value)}\n            />\n            <InputGroup.Append>\n            <InputGroup.Text onClick={() => {\n            AddComment({comment,postid:post._id})\n            setComment('')\n          }} style={{color:'white',cursor:'pointer'}} className=\"bg-primary\">Post</InputGroup.Text>\n            </InputGroup.Append>\n        </InputGroup>   \n        <hr style={{marginBottom:'0',marginTop:'0.5rem'}} />\n       <Comment postid={post._id} comments={post.comments} />\n      </Card>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      isAuthenticated:state.auth.isAuthenticated,\n      user:state.auth.user\n    }\n  }\n\nexport default connect(mapStateToProps,{Like,Dislike,AddComment,deletePost})(Post);","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Connection.js",["272"],"const initialState = null;\n\nexport default (state = initialState,action) => {\n     const { type,payload} = action;\n     switch(type){\n         case 'Set_Connections':\n             return payload\n        default:\n            return state;\n     }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Post.js",["273"],"const initialState = []\n\nexport default (state = initialState,action) => {\n    const {type,payload} = action;\n    switch(type){\n        case 'Show_Post':\n            return[\n               ...payload\n            ];\n        case 'Delete_Post':\n        return{\n            ...state,\n            isActive:false\n        };\n        default:\n        return state;\n    }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/EditPost.js",["274","275"],"import React,{useState,useEffect} from 'react';\nimport {InputGroup,Image,FormControl,Button,Modal,Alert} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport {Redirect,Link} from 'react-router-dom'\nimport {editPost} from '../../actions/post'\nimport userImg from '../../utils/user.png'\n\nconst EditPost = (props) => {\n    const {post,editPost,isAuthenticated,editpost} = props;\n    const[postImage,setPostImage] = useState(null);\n    const [postText,setPostText] = useState('');\n    useEffect(() => {\n      setPostText(post.text)\n    },[post])\n    if(!isAuthenticated){\n      return <Redirect to='/' />\n    }\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        {\n          editpost?<Alert variant=\"success\">{editpost}</Alert>:null\n        }\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit Post\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <InputGroup>\n            <InputGroup.Prepend>\n            <InputGroup.Text>Edit Post Text</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl value={postText} onChange={(event) => setPostText(event.target.value)} as=\"textarea\" aria-label=\"With textarea\" />\n        </InputGroup>\n          <hr/>\n          <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Edit Post Image</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n                aria-label=\"Choose Profile Picture\"\n                aria-describedby=\"basic-addon2\"\n                type=\"file\"\n                accept=\"image/png, image/jpeg, image/jpg\"\n                style={{maxWidth:'15rem'}}\n                className=\"btn btn-dark\"\n                onChange={(event) => {\n                    setPostImage(event.target.files[0]);\n                    event.target.value = null;\n                }}\n            />\n          </InputGroup>\n          <br/>\n          {post.image?\n            <Image className=\"col\" style={{maxHeight:'14rem',maxWidth: '12rem'}} variant=\"top\" src={postImage?URL.createObjectURL(postImage):post.image} />:null\n           }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button  onClick={(event) => {\n                if(postText !== '' || postImage !== null){\n                    editPost({postid:post._id,postText,postImage});\n                    setPostImage(null);\n                }\n                event.preventDefault();\n            }} variant=\"primary\">Edit Post</Button>\n          <Button onClick={props.onHide} >Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return{\n      isAuthenticated:state.auth.isAuthenticated,\n      user:state.auth.user,\n      editpost:state.editpost\n    }\n  }\n\nexport default connect(mapStateToProps,{editPost})(EditPost);\n  ","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Chat.js",["276"],"const initialstate = {\n    connection:[],\n    chats : []\n}\n\nexport default (state=initialstate,action) => {\n       const {type,payload} = action;\n       switch(type){\n           case 'Set_Chat_Connections':\n               return {\n                   ...state,\n                   connection:payload[0].connections\n               };\n            case 'Set_Chats':\n            return {\n                ...state,\n                chats:payload\n            }\n            default:\n                return state;\n       }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/reportWebVitals.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Find/Find.js",["277","278"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Auth/Auth.js",["279"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/utils/msToTime.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/update.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Loader.js",["280"],"const initialState = {\n    isActive : false\n};\n\nexport default (state = initialState,action) => {\n    const {type} = action;\n    switch(type){\n        case 'Set_Loader':\n            return{\n                ...state,\n                isActive:true\n            };\n        case 'Remove_Loader':\n        return{\n            ...state,\n            isActive:false\n        };\n        default:\n        return state;\n    }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/Comment.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/store.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/connection.js",["281"],"import axios from 'axios'\nimport {setAlert} from './alert'\nimport {setLoader,removeLoader} from './loader'\nimport utils from '../utils/utils.json';\nimport {loadUser} from './auth'\n\nexport const getConnections = () => async(dispatch) => {\n    dispatch(setLoader());\n    try {\n        const result = await axios.get(`${utils.BACKEND_URL}/profile/connections`);\n        /* console.log(result.data); */\n        dispatch({type:'Set_Connections',payload:result.data});\n        dispatch(removeLoader());\n    } catch (error) {\n      if(error.response){\n          const errors = error.response.data.errors;\n          dispatch(removeLoader());\n          if (errors) {\n              errors.forEach((error) => dispatch(setAlert({msg:error.msg,alertType:'danger'})));\n          }\n      }\n    }\n}\n\n","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Home/AddPost.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Alert.js",["282"],"const initialState = []\n\nexport default (state = initialState,action) => {\n    const {type,payload} = action;\n    switch(type){\n        case 'Set_Alert':\n            return [\n                ...state,\n                payload\n            ];\n        case 'Remove_Alert':\n        return state.filter((alert) => alert.id !== payload);\n        default :\n            return state;\n    }\n}","/home/adarsh/MERN Projects/Social Media Project/frontend/src/index.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Connection/Connection.js",["283","284","285"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/index.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Profile/EditPost.js",["286","287","288"],"import React,{useState,useEffect} from 'react';\nimport {InputGroup,Image,FormControl,Button,Modal,Alert} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport {Redirect,Link} from 'react-router-dom'\nimport {editPost} from '../../actions/post'\nimport userImg from '../../utils/user.png'\n\nconst EditPost = (props) => {\n    const {post,editPost,isAuthenticated,editpost,user} = props;\n    const[postImage,setPostImage] = useState(null);\n    const [postText,setPostText] = useState(null);\n    useEffect(() => {\n      setPostText(post.text)\n    },[post])\n    if(!isAuthenticated){\n      return <Redirect to='/' />\n    }\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        {\n          editpost?<Alert variant=\"success\">{editpost}</Alert>:null\n        }\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit Post\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <InputGroup>\n            <InputGroup.Prepend>\n            <InputGroup.Text>Edit Post Text</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl value={postText} onChange={(event) => setPostText(event.target.value)} as=\"textarea\" aria-label=\"With textarea\" />\n        </InputGroup>\n          <hr/>\n          <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Edit Post Image</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n                aria-label=\"Choose Profile Picture\"\n                aria-describedby=\"basic-addon2\"\n                type=\"file\"\n                accept=\"image/png, image/jpeg, image/jpg\"\n                style={{maxWidth:'15rem'}}\n                className=\"btn btn-dark\"\n                onChange={(event) => {\n                    setPostImage(event.target.files[0]);\n                    event.target.value = null;\n                }}\n            />\n          </InputGroup>\n          <br/>\n          {post.image?\n            <Image className=\"col\" style={{maxHeight:'14rem',maxWidth: '12rem'}} variant=\"top\" src={postImage?URL.createObjectURL(postImage):post.image} />:null\n           }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button  onClick={(event) => {\n                if(postText !== '' || postImage !== null){\n                    editPost({postid:post._id,postText,postImage});\n                    setPostImage(null);\n                }\n                event.preventDefault();\n            }} variant=\"primary\">Edit Post</Button>\n          <Button onClick={props.onHide} >Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return{\n      isAuthenticated:state.auth.isAuthenticated,\n      user:state.auth.user,\n      editpost:state.editpost\n    }\n  }\n\nexport default connect(mapStateToProps,{editPost})(EditPost);\n  ","/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Landing/Landing.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/actions/loader.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/Alert/Alert.js",[],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/reducers/Person.js",["289"],"/home/adarsh/MERN Projects/Social Media Project/frontend/src/components/About/About.js",["290"],{"ruleId":"291","severity":1,"message":"292","line":2,"column":30,"nodeType":"293","messageId":"294","endLine":2,"endColumn":36},{"ruleId":"295","severity":1,"message":"296","line":20,"column":8,"nodeType":"297","endLine":20,"endColumn":10,"suggestions":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"291","severity":1,"message":"303","line":2,"column":9,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":2,"column":19,"nodeType":"293","messageId":"294","endLine":2,"endColumn":25},{"ruleId":"291","severity":1,"message":"304","line":2,"column":9,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"291","severity":1,"message":"305","line":2,"column":24,"nodeType":"293","messageId":"294","endLine":2,"endColumn":29},{"ruleId":"291","severity":1,"message":"292","line":2,"column":30,"nodeType":"293","messageId":"294","endLine":2,"endColumn":36},{"ruleId":"295","severity":1,"message":"306","line":28,"column":7,"nodeType":"297","endLine":28,"endColumn":9,"suggestions":"307"},{"ruleId":"295","severity":1,"message":"308","line":46,"column":7,"nodeType":"297","endLine":46,"endColumn":9,"suggestions":"309"},{"ruleId":"291","severity":1,"message":"310","line":1,"column":24,"nodeType":"293","messageId":"294","endLine":1,"endColumn":33},{"ruleId":"291","severity":1,"message":"311","line":22,"column":10,"nodeType":"293","messageId":"294","endLine":22,"endColumn":18},{"ruleId":"291","severity":1,"message":"312","line":2,"column":20,"nodeType":"293","messageId":"294","endLine":2,"endColumn":31},{"ruleId":"313","severity":1,"message":"314","line":16,"column":58,"nodeType":"315","endLine":16,"endColumn":125},{"ruleId":"291","severity":1,"message":"316","line":2,"column":8,"nodeType":"293","messageId":"294","endLine":2,"endColumn":22},{"ruleId":"295","severity":1,"message":"317","line":29,"column":7,"nodeType":"297","endLine":29,"endColumn":9,"suggestions":"318"},{"ruleId":"291","severity":1,"message":"319","line":1,"column":25,"nodeType":"293","messageId":"294","endLine":1,"endColumn":33},{"ruleId":"291","severity":1,"message":"320","line":2,"column":9,"nodeType":"293","messageId":"294","endLine":2,"endColumn":13},{"ruleId":"291","severity":1,"message":"321","line":2,"column":14,"nodeType":"293","messageId":"294","endLine":2,"endColumn":24},{"ruleId":"291","severity":1,"message":"305","line":2,"column":25,"nodeType":"293","messageId":"294","endLine":2,"endColumn":30},{"ruleId":"291","severity":1,"message":"322","line":2,"column":31,"nodeType":"293","messageId":"294","endLine":2,"endColumn":42},{"ruleId":"291","severity":1,"message":"323","line":5,"column":9,"nodeType":"293","messageId":"294","endLine":5,"endColumn":19},{"ruleId":"291","severity":1,"message":"324","line":6,"column":8,"nodeType":"293","messageId":"294","endLine":6,"endColumn":15},{"ruleId":"295","severity":1,"message":"325","line":14,"column":7,"nodeType":"297","endLine":14,"endColumn":9,"suggestions":"326"},{"ruleId":"299","replacedBy":"327"},{"ruleId":"301","replacedBy":"328"},{"ruleId":"291","severity":1,"message":"329","line":11,"column":9,"nodeType":"293","messageId":"294","endLine":11,"endColumn":19},{"ruleId":"295","severity":1,"message":"330","line":34,"column":7,"nodeType":"297","endLine":34,"endColumn":13,"suggestions":"331"},{"ruleId":"291","severity":1,"message":"332","line":119,"column":19,"nodeType":"293","messageId":"294","endLine":119,"endColumn":22},{"ruleId":"291","severity":1,"message":"332","line":138,"column":19,"nodeType":"293","messageId":"294","endLine":138,"endColumn":22},{"ruleId":"291","severity":1,"message":"332","line":158,"column":17,"nodeType":"293","messageId":"294","endLine":158,"endColumn":20},{"ruleId":"291","severity":1,"message":"333","line":178,"column":15,"nodeType":"293","messageId":"294","endLine":178,"endColumn":22},{"ruleId":"334","severity":1,"message":"335","line":3,"column":1,"nodeType":"336","endLine":13,"endColumn":2},{"ruleId":"334","severity":1,"message":"335","line":3,"column":1,"nodeType":"336","endLine":11,"endColumn":2},{"ruleId":"334","severity":1,"message":"335","line":7,"column":1,"nodeType":"336","endLine":39,"endColumn":2},{"ruleId":"299","replacedBy":"337"},{"ruleId":"301","replacedBy":"338"},{"ruleId":"291","severity":1,"message":"339","line":4,"column":8,"nodeType":"293","messageId":"294","endLine":4,"endColumn":20},{"ruleId":"291","severity":1,"message":"340","line":6,"column":9,"nodeType":"293","messageId":"294","endLine":6,"endColumn":17},{"ruleId":"291","severity":1,"message":"341","line":28,"column":15,"nodeType":"293","messageId":"294","endLine":28,"endColumn":21},{"ruleId":"291","severity":1,"message":"342","line":12,"column":21,"nodeType":"293","messageId":"294","endLine":12,"endColumn":35},{"ruleId":"295","severity":1,"message":"343","line":19,"column":8,"nodeType":"297","endLine":19,"endColumn":18,"suggestions":"344"},{"ruleId":"291","severity":1,"message":"303","line":2,"column":9,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":2,"column":19,"nodeType":"293","messageId":"294","endLine":2,"endColumn":25},{"ruleId":"291","severity":1,"message":"322","line":2,"column":32,"nodeType":"293","messageId":"294","endLine":2,"endColumn":43},{"ruleId":"291","severity":1,"message":"320","line":2,"column":44,"nodeType":"293","messageId":"294","endLine":2,"endColumn":48},{"ruleId":"291","severity":1,"message":"311","line":5,"column":9,"nodeType":"293","messageId":"294","endLine":5,"endColumn":17},{"ruleId":"291","severity":1,"message":"345","line":2,"column":68,"nodeType":"293","messageId":"294","endLine":2,"endColumn":73},{"ruleId":"291","severity":1,"message":"292","line":2,"column":74,"nodeType":"293","messageId":"294","endLine":2,"endColumn":80},{"ruleId":"295","severity":1,"message":"330","line":34,"column":7,"nodeType":"297","endLine":34,"endColumn":13,"suggestions":"346"},{"ruleId":"334","severity":1,"message":"335","line":3,"column":1,"nodeType":"336","endLine":11,"endColumn":2},{"ruleId":"334","severity":1,"message":"335","line":3,"column":1,"nodeType":"336","endLine":18,"endColumn":2},{"ruleId":"291","severity":1,"message":"347","line":4,"column":18,"nodeType":"293","messageId":"294","endLine":4,"endColumn":22},{"ruleId":"291","severity":1,"message":"324","line":6,"column":8,"nodeType":"293","messageId":"294","endLine":6,"endColumn":15},{"ruleId":"334","severity":1,"message":"335","line":6,"column":1,"nodeType":"336","endLine":22,"endColumn":2},{"ruleId":"291","severity":1,"message":"310","line":1,"column":26,"nodeType":"293","messageId":"294","endLine":1,"endColumn":35},{"ruleId":"348","severity":1,"message":"349","line":25,"column":115,"nodeType":"350","messageId":"351","endLine":25,"endColumn":128},{"ruleId":"291","severity":1,"message":"352","line":2,"column":18,"nodeType":"293","messageId":"294","endLine":2,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":5,"column":1,"nodeType":"336","endLine":21,"endColumn":2},{"ruleId":"291","severity":1,"message":"311","line":5,"column":9,"nodeType":"293","messageId":"294","endLine":5,"endColumn":17},{"ruleId":"334","severity":1,"message":"335","line":3,"column":1,"nodeType":"336","endLine":16,"endColumn":2},{"ruleId":"291","severity":1,"message":"353","line":2,"column":9,"nodeType":"293","messageId":"294","endLine":2,"endColumn":13},{"ruleId":"291","severity":1,"message":"354","line":2,"column":14,"nodeType":"293","messageId":"294","endLine":2,"endColumn":17},{"ruleId":"295","severity":1,"message":"355","line":13,"column":8,"nodeType":"297","endLine":13,"endColumn":10,"suggestions":"356"},{"ruleId":"291","severity":1,"message":"347","line":4,"column":18,"nodeType":"293","messageId":"294","endLine":4,"endColumn":22},{"ruleId":"291","severity":1,"message":"324","line":6,"column":8,"nodeType":"293","messageId":"294","endLine":6,"endColumn":15},{"ruleId":"291","severity":1,"message":"357","line":9,"column":51,"nodeType":"293","messageId":"294","endLine":9,"endColumn":55},{"ruleId":"334","severity":1,"message":"335","line":6,"column":1,"nodeType":"336","endLine":22,"endColumn":2},{"ruleId":"291","severity":1,"message":"319","line":1,"column":15,"nodeType":"293","messageId":"294","endLine":1,"endColumn":23},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getChatConnections'. Either include it or remove the dependency array. If 'getChatConnections' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["358"],"no-native-reassign",["359"],"no-negated-in-lhs",["360"],"'Jumbotron' is defined but never used.","'ListGroup' is defined but never used.","'Image' is defined but never used.","React Hook useEffect has missing dependencies: 'getMessage' and 'room'. Either include them or remove the dependency array. If 'getMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["361"],"React Hook useEffect has missing dependencies: 'room' and 'user.name'. Either include them or remove the dependency array.",["362"],"'useEffect' is defined but never used.","'loadUser' is defined but never used.","'NavDropdown' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'LoadingOverlay' is defined but never used.","React Hook useEffect has missing dependencies: 'isAuthenticated', 'user.email', and 'user.name'. Either include them or remove the dependency array. If 'setName' needs the current value of 'user.name', you can also switch to useReducer instead of useState and read 'user.name' in the reducer.",["363"],"'useState' is defined but never used.","'Card' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'FaThumbsUp' is defined but never used.","'userImg' is defined but never used.","React Hook useEffect has a missing dependency: 'showPost'. Either include it or remove the dependency array. If 'showPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["364"],["359"],["360"],"'getProfile' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["365"],"'res' is assigned a value but never used.","'deleted' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["359"],["360"],"'setAuthToken' is defined but never used.","'Navigate' is defined but never used.","'result' is assigned a value but never used.","'setCurrentTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array. If 'getProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["366"],"'Modal' is defined but never used.",["367"],"'Link' is defined but never used.","no-dupe-keys","Duplicate key 'textTransform'.","ObjectExpression","unexpected","'Spinner' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","React Hook useEffect has a missing dependency: 'getConnections'. Either include it or remove the dependency array. If 'getConnections' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["368"],"'user' is assigned a value but never used.",{"desc":"369","fix":"370"},"no-global-assign","no-unsafe-negation",{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"379","fix":"383"},{"desc":"384","fix":"385"},"Update the dependencies array to be: [getChatConnections]",{"range":"386","text":"387"},"Update the dependencies array to be: [getMessage, room]",{"range":"388","text":"389"},"Update the dependencies array to be: [room, user.name]",{"range":"390","text":"391"},"Update the dependencies array to be: [isAuthenticated, user.email, user.name]",{"range":"392","text":"393"},"Update the dependencies array to be: [showPost]",{"range":"394","text":"395"},"Update the dependencies array to be: [post, user]",{"range":"396","text":"397"},"Update the dependencies array to be: [getProfile, personid]",{"range":"398","text":"399"},{"range":"400","text":"397"},"Update the dependencies array to be: [getConnections]",{"range":"401","text":"402"},[667,669],"[getChatConnections]",[878,880],"[getMessage, room]",[1289,1291],"[room, user.name]",[1124,1126],"[isAuthenticated, user.email, user.name]",[454,456],"[showPost]",[1298,1304],"[post, user]",[766,776],"[getProfile, personid]",[1231,1237],[438,440],"[getConnections]"]